{"version":3,"sources":["Components/firebase/index.js","Components/AddBooking/Locations.js","utils/index.js","Components/Login.js","Components/Signup.js","Components/forgetPassword.js","Components/AddBooking/ShowSlotsTiming.js","Components/AddBooking/NewBooking.js","Components/Dashboard.js","Components/AddBooking/ShowBookings.js","Admin/Dashboard.js","Admin/ActionsButton.js","Admin/Allusers.js","Admin/AllBookings.js","Admin/AddLocations.js","Admin/ViewLocations.js","parking.png","Components/NavBar.js","Routers/PrivateRoute.js","Routers/Routes.js","App.js","store/action/action.js","store/reducer/taskReducer.js","store/reducer/CombineReducer.js","store/store.js","index.js"],"names":["googleProvider","firebase","auth","GoogleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Locations","history","useHistory","useState","currentUser","setCurrentUser","allLocations","setAllLocations","useEffect","onAuthStateChanged","user","email","database","ref","child","on","snapshot","val","Object","keys","length","className","onClick","goBack","style","fontWeight","cursor","goForward","Card","Body","ListGroup","variant","map","key","Item","locationName","_","push","slots","Spinner","animation","size","titleCase","str","toLowerCase","replace","t","toUpperCase","errorsAtLogin","error","setvalidationError","validationError","initialState","isGoogleAccount","a","block","errorCode","code","errorMessage","message","console","log","password","access","connection","signOut","errorMsg","response","data","deleteUserData","remove","then","catch","checkUserBlock","filter","Login","initialErrors","state","setState","showPassword","setShowPassword","loading","setLoading","handleChange","e","target","name","value","handleSocialLogin","signInWithPopup","googleSignIn","isNewUser","additionalUserInfo","displayName","uid","obj","username","bookings","set","err","width","Alert","Form","onSubmit","preventDefault","signInWithEmailAndPassword","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","disabled","as","role","aria-hidden","background","borderColor","color","to","SignUp","createUserWithEmailAndPassword","usernmae","sendPasswordResetEmail","window","alert","ShowSlotsTiming","passData","currentLocation","setCurrentLocation","Table","responsive","striped","bordered","hover","index","array","startTime","moment","userDate","endTime","endDate","duration","timeDuration","format","bookingId","colSpan","withRouter","props","useParams","address","totalSlots","momentRange","extendMoment","location","undefined","inititialErrors","isAfter","conflicit","timeLimit","slotNo","setSlotNo","setBookings","noOfSlots","setNoOfSlots","showSlots","setShowSlots","slotsAvailablity","setSlotsAvailablity","bookSlot","setBookSlot","setPassData","success","setSuccess","setError","newArray","hasOwnProperty","Array","parseInt","fill","x","y","add","hours","utc","diff","min","totalTimeArr","hour","_i","getDays","bookingObj","setTimeout","Row","totalTime","date","date1","date2","range","range2","overlaps","contains","isSame","copySlots","toRemove","includes","checkSlot","slot","setcurrentUser","Title","fontSize","Col","get","Dashboard","admin","setAdmin","ActionsButton","title","AllBookings","allUsers","setAllUsers","deleteUser","setDeleteUser","allusers","adminDeleteUser","fetch","method","headers","rawResponse","json","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","update","blockUser","warning","showCancel","confirmBtnText","confirmBtnBsStyle","onConfirm","onCancel","allowEscape","sort","setnewArray","sorting","setSorting","v","i","indexOf","sortBy","b","Date","getTime","Number","split","dateTime","Container","loc","filterBy","AddLocations","checkLocation","find","loc_key","locationId","no","ViewLocations","innerWidth","NavBar","loginUser","setloginUser","adminNav","Nav","Link","loginNav","pushTo","logoNav","Navbar","Brand","src","parkingApp","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","id","inline","localStorage","removeItem","reload","PrivateRoute","Component","component","redirectTo","isLogin","isAdmin","isUser","rest","JSON","parse","getItem","render","Routes","setItem","stringify","exact","path","forgetPassword","Allusers","AdminDashboard","ShowBookings","NewBookings","App","show","InitialState","persistConfig","storage","rootReducer","combineReducers","task","action","persistReducer","enhancer","compose","applyMiddleware","thunk","store","createStore","rootreducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9a84a45.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyCfB8GzGzKO7HY4BnGSAuiiP8AQRPhWnhQ\",\r\n    authDomain: \"parkingapp-a3b26.firebaseapp.com\",\r\n    projectId: \"parkingapp-a3b26\",\r\n    storageBucket: \"parkingapp-a3b26.appspot.com\",\r\n    messagingSenderId: \"335333417711\",\r\n    appId: \"1:335333417711:web:82bb139bc981c94928311a\"\r\n};\r\n// Initialize Firebase\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Spinner } from \"react-bootstrap\"\r\nimport { ArrowLeftCircleFill, ArrowRightCircleFill, ArrowBarRight } from \"react-bootstrap-icons\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport firebase from \"../firebase/index\"\r\nimport \"./style.css\"\r\n\r\nfunction Locations() {\r\n    const history = useHistory()\r\n    const [currentUser, setCurrentUser] = useState({})\r\n    const [allLocations, setAllLocations] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (!!user && user?.email !== \"admin@gmail.com\") {\r\n                setCurrentUser(user)\r\n            }\r\n        });\r\n        firebase.database().ref(\"admin\").child(\"locations\").on(\"value\", snapshot => {\r\n            setAllLocations(snapshot.val())\r\n        })\r\n    }, [])\r\n    return (\r\n        !!Object.keys(currentUser).length ?\r\n            <>\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"users_heading\">\r\n                        <h2 className=\"text-center text-capitalize\" >\r\n                            <ArrowLeftCircleFill onClick={() => history.goBack()} style={{ fontWeight: \"bold\", cursor: \"pointer\" }} />\r\n                   &nbsp;Locations&nbsp;\r\n                    <ArrowRightCircleFill onClick={() => history.goForward()} style={{ fontWeight: \"bold\", cursor: \"pointer\" }} />\r\n                        </h2>\r\n                    </div>\r\n                    {Object.keys(allLocations).length > 0 ?\r\n                        <Card>\r\n                            <Card.Body >\r\n                                <p className=\"text-center text-dark\">Select one of the following Locations for Parking</p>\r\n                                <ListGroup variant=\"flush\">\r\n                                    {Object.keys(allLocations).map(key => {\r\n                                        return <ListGroup.Item key={key}>\r\n                                            <span>{allLocations[key].locationName}<br /></span>\r\n                                            <ArrowBarRight onClick={_ => history.push(`/locations/${allLocations[key].locationName}/${allLocations[key].slots}`)} />\r\n                                        </ListGroup.Item>\r\n                                    })}\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        :\r\n                        <div className=\"text-center mx-auto\">\r\n                            <Spinner animation=\"border\" size=\"lg\" variant=\"primary\" />\r\n                        </div>}\r\n                </div>\r\n            </> : null\r\n    )\r\n}\r\n\r\nexport default Locations\r\n","import firebase from \"../Components/firebase/index\"\r\n\r\n\r\nexport const titleCase = str => {\r\n    let str1 = str.toLowerCase()\r\n    return str1.replace(/(^|\\s)\\S/g, function (t) { return t.toUpperCase() });\r\n}\r\n\r\nexport const errorsAtLogin = async (error, setvalidationError, validationError, initialState, isGoogleAccount) => {\r\n    setvalidationError({ ...validationError, block: \"\" })\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    if (!isGoogleAccount) {\r\n        console.log({ errorCode, errorMessage })\r\n        if (error.code === \"auth/user-not-found\") {\r\n            setvalidationError({ ...validationError, email: \"User have not found or may Have deleted\" })\r\n        }\r\n        else if (error.code === \"auth/wrong-password\") {\r\n            setvalidationError({ ...validationError, password: \"Password is invalid\" })\r\n        }\r\n        else if (error.code === \"auth/too-many-requests\") {\r\n            setvalidationError({ ...validationError, access: \"Too many try, Now Access to this account has been disabled\" })\r\n        }\r\n        else if (error.code === \"auth/network-request-failed\") {\r\n            setvalidationError({ ...validationError, connection: \"Your Internet Connection has been disbaled\" })\r\n        }\r\n        else {\r\n            setvalidationError(initialState)\r\n        }\r\n    }\r\n    else {\r\n        await firebase.auth().signOut()\r\n        const errorMsg = error.response?.data?.message || errorMessage\r\n        console.log({ errorMsg })\r\n    }\r\n}\r\n\r\nexport const blockUser = (user, block) => {\r\n    firebase.database().ref('clients/').child(user.key).update(\r\n        { block: !block },\r\n        err => {\r\n            if (err) {\r\n                console.log(\"error\", err)\r\n            }\r\n        });\r\n}\r\n\r\nexport const deleteUserData = (user) => {\r\n    firebase.database().ref('clients/').child(user.key).remove()\r\n        .then(function () {\r\n            console.log(\"Remove succeeded.\")\r\n            return true\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"Remove failed: \" + error.message)\r\n            return false\r\n        });\r\n}\r\n\r\nexport const checkUserBlock = (email, setvalidationError, validationError, isGoogleAccount) => {\r\n    firebase.database().ref(\"clients/\").on(\"value\", snapshot => {\r\n        Object.keys(snapshot.val()).filter(user => {\r\n            if (snapshot.val()[user].email === email && snapshot.val()[user].block) {\r\n                setvalidationError({ ...validationError, block: \"You have been Blocked\" })\r\n                return true\r\n            }\r\n        })\r\n    })\r\n    return false\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Card, Alert, Spinner } from \"react-bootstrap\"\r\nimport { Envelope, Eye, EyeSlash, Google as GoogleIcon } from \"react-bootstrap-icons\"\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport firebase, { googleProvider } from \"../Components/firebase/index\"\r\nimport { titleCase, errorsAtLogin, checkUserBlock } from \"../utils/index\"\r\nimport \"./style.css\"\r\n\r\nexport default function Login() {\r\n    let history = useHistory()\r\n    let initialState = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n    let initialErrors = {\r\n        email: \"\",\r\n        password: \"\",\r\n        access: \"\",\r\n        block: \"\",\r\n        connection: \"\"\r\n    }\r\n    const [state, setState] = useState(initialState)\r\n    const [showPassword, setShowPassword] = useState(true)\r\n    const [loading, setLoading] = useState(false)\r\n    const [validationError, setvalidationError] = useState(initialErrors)\r\n\r\n    let { email, password } = state\r\n\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n        setvalidationError(initialErrors)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setvalidationError(initialErrors)\r\n\r\n        const ifBlock = checkUserBlock(state.email, setvalidationError, validationError)\r\n\r\n        if (!ifBlock) {\r\n            setvalidationError({ ...validationError, block: \"\" })\r\n            setLoading(true)\r\n            firebase.auth().signInWithEmailAndPassword(email, password)\r\n                .then(({ user }) => {\r\n                    if (user.email === \"admin@gmail.com\") {\r\n                        history.push(\"/adminDashboard\")\r\n                    }\r\n                    else {\r\n                        history.push(\"/dashboard\")\r\n                    }\r\n                    setState(initialState)\r\n                    setvalidationError(initialState)\r\n                })\r\n                .catch((error) => {\r\n                    errorsAtLogin(error, setvalidationError, validationError, initialState)\r\n                    setLoading(false)\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const handleSocialLogin = async () => {\r\n        setState(initialState)\r\n        try {\r\n            const googleSignIn = await firebase.auth().signInWithPopup(googleProvider)\r\n            const { additionalUserInfo: { isNewUser }, user: { displayName, email, uid } } = googleSignIn\r\n            console.log(\"googleSignIn\", googleSignIn)\r\n\r\n            if (isNewUser) {\r\n                let obj = { username: titleCase(displayName), email: email, key: uid, bookings: {} }\r\n                return firebase.database().ref('clients/').child(uid).set(obj, err => console.log(\"error\", err));\r\n            }\r\n            else {\r\n                const ifBlock = checkUserBlock(email, setvalidationError, validationError, true)\r\n                if (ifBlock) {\r\n                    firebase.auth().signOut()\r\n                }\r\n                else {\r\n                    setvalidationError({ ...validationError, block: \"\" })\r\n                    setLoading(true)\r\n                    setState(initialState)\r\n                    setvalidationError(initialState)\r\n                    history.push(\"/dashboard\")\r\n                }\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            errorsAtLogin(error, setvalidationError, validationError, initialState, true)\r\n        }\r\n    }\r\n\r\n    let validate = () => (state.email && state.password && !loading) ? true : false\r\n\r\n    return (\r\n\r\n        <div className=\"container mt-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\">Login</h2>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Card className=\"card_body col-lg-8 col-sm-12 col-md-10 col-11 mx-auto py-3\" style={{ width: '40rem' }}>\r\n                    {(validationError?.access || validationError?.connection) ? <Alert className=\"\" variant=\"danger\">{validationError.access || validationError?.connection}</Alert> : null}\r\n                    <Form className=\"mb-3\" onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"input-group\" controlId=\"formTitle\">\r\n                            <Form.Label className=\"d-block w-100\">Email</Form.Label>\r\n                            <Form.Control className={validationError.email ? \"is-invalid\" : \"\"} type=\"email\" placeholder=\"Enter Email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"input-group-text\">\r\n                                <Envelope />\r\n                            </div>\r\n                            <Form.Text className=\"text-danger ml-1 w-100\">{validationError.email || validationError.block}</Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"input-group\" controlId=\"formDescription\">\r\n                            <Form.Label className=\"d-block w-100\">Password</Form.Label>\r\n                            <Form.Control className={validationError.password ? \"is-invalid\" : \"\"} placeholder=\"Password\"\r\n                                type={showPassword ? \"password\" : \"text\"}\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"input-group-text\">\r\n                                {showPassword ? <Eye onClick={() => setShowPassword(false)} />\r\n                                    : <EyeSlash onClick={() => setShowPassword(true)} />}\r\n                            </div>\r\n                            <Form.Text className=\"text-danger w-100\">{validationError.password}</Form.Text>\r\n                        </Form.Group>\r\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\" disabled={!validate()}>\r\n                            {loading ? <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <span className=\"ml-2\">Loading...</span>\r\n                            </> : \"Submit\"}\r\n                        </Button>\r\n                        <Button\r\n                            className=\"w-100 mt-4\"\r\n                            type=\"submit\"\r\n                            style={{ fontWeight: \"bold\", background: \"#e13719\", borderColor: \"#e13719\" }}\r\n                            onClick={handleSocialLogin}\r\n                        >\r\n                            <GoogleIcon color=\"white\" size={35} className=\"p-2\" />\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </Form>\r\n                    {/* <hr /> */}\r\n                    <div className=\"text-center mb-2 d-flex flex-column justify-content-center\">\r\n                        <b>OR</b>\r\n                        <div>\r\n                            <Link to=\"./signup\" className=\"mx-2\">Create Account</Link>\r\n                            <span>|</span>\r\n                            <Link to=\"./forget\" className=\"mx-2\">Forget Password</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Card, Spinner } from \"react-bootstrap\"\r\nimport { Envelope, Eye, EyeSlash, Window } from \"react-bootstrap-icons\"\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport firebase from \"../Components/firebase/index.js\"\r\nimport { titleCase } from \"../utils/index\"\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n    const history = useHistory()\r\n    let initialState = {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n    const [state, setState] = useState(initialState)\r\n    const [showPassword, setShowPassword] = useState(true)\r\n    const [validationError, setvalidationError] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\"\r\n    })\r\n    const [currentUser, setCurrentUser] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    let { email, password, username } = state\r\n\r\n    useEffect(() => {\r\n        setCurrentUser(firebase.auth().currentUser)\r\n        return () => console.log(\"SignUp Component unmounted\")\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n        setvalidationError({ ...validationError, email: \"\", password: \"\" })\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                let obj = { username: titleCase(username), email: user.email, key: user.uid, bookings: {} }\r\n                firebase.database().ref('clients/').child(user.uid).set(\r\n                    obj,\r\n                    err => {\r\n                        if (err) {\r\n                            console.log(\"error\", err)\r\n                        }\r\n                    });\r\n                console.log(\"SignUp-User\", obj)\r\n                setState(initialState)\r\n                setvalidationError(initialState)\r\n                // firebase.auth().signOut()\r\n                history.push(\"/\")\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log({ errorCode, errorMessage })\r\n                if (errorCode === \"auth/email-already-in-use\") {\r\n                    setvalidationError({ ...validationError, email: \"The Email is already been in use\" })\r\n                }\r\n                else if (errorCode === \"auth/weak-password\") {\r\n                    setvalidationError({ ...validationError, password: \"Password should be at least 6 characters\" })\r\n                }\r\n                setLoading(false)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    let validate = () => (username && email && password && !loading) ? true : false\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container my-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\">Sign Up</h2>\r\n            </div>\r\n            <div className=\"row show\">\r\n                <Card className=\"card_body col-lg-8 col-sm-12 col-md-10 col-11 mx-auto \" style={{ width: '40rem' }}>\r\n\r\n                    <Form className=\"my-3\" onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group className=\"input-group\" controlId=\"formUsername\">\r\n                            <Form.Label className=\"d-block w-100\">Username</Form.Label>\r\n                            <Form.Control className=\"text-secondary\" type=\"text\" placeholder=\"Enter Username\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"input-group-text\">\r\n                                <Window />\r\n                            </div>\r\n                            <Form.Text className=\"text-danger w-100\">{validationError.usernmae}</Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"input-group\" controlId=\"formEmail\">\r\n                            <Form.Label className=\"d-block w-100\">Email</Form.Label>\r\n                            <Form.Control className={`${validationError.email ? \"is-invalid\" : \"\"} text-secondary`} type=\"email\" placeholder=\"Enter Email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"input-group-text\">\r\n                                <Envelope />\r\n                            </div>\r\n                            <Form.Text className=\"text-danger w-100\">{validationError.email}</Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"input-group\" controlId=\"formPassword\">\r\n                            <Form.Label className=\"d-block w-100\">Password</Form.Label>\r\n                            <Form.Control className={`${validationError.password ? \"is-invalid\" : \"\"} text-secondary`} placeholder=\"Password\"\r\n                                type={showPassword ? \"password\" : \"text\"}\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"input-group-text\">\r\n                                {showPassword ? <EyeSlash onClick={() => setShowPassword(false)} />\r\n                                    : <Eye onClick={() => setShowPassword(true)} />}\r\n                            </div>\r\n                            {/* <Form.Text className=\"text-dark\">Password Must be greater than 5</Form.Text> */}\r\n                            <Form.Text className=\"text-danger w-100\">{validationError.password}</Form.Text>\r\n                        </Form.Group>\r\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\" disabled={!validate()}>\r\n                            {loading ? <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <span className=\"ml-2\">Loading...</span>\r\n                            </> : \"Submit\"}\r\n                        </Button>\r\n                    </Form>\r\n                    <hr />\r\n\r\n                    <div className=\"text-center mb-4 d-flex justify-content-center\">\r\n                        <b>OR</b>\r\n                        <Link to=\"/\" className=\"mx-2 font-weight-bold\">Login</Link>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport { Envelope, Eye, EyeSlash } from \"react-bootstrap-icons\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport firebase from \"../Components/firebase/index\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./style.css\"\r\n\r\nexport default function Login() {\r\n    let history = useHistory()\r\n    let initialState = {\r\n        email: \"\"\r\n    }\r\n    const [state, setState] = useState(initialState)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    let { email } = state\r\n\r\n    useEffect(() => {\r\n        console.log(\"Forget Password\")\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"state\", state)\r\n        firebase.auth().sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                window.alert(\"Email has been sent to you please check it!!\")\r\n                setState(initialState)\r\n            })\r\n            .catch((error) => {\r\n                let errorCode = error.code\r\n                let errorMessage = error.message;\r\n\r\n                console.log(errorCode)\r\n                console.log(errorMessage)\r\n                window.alert(\"Message\", errorMessage)\r\n                history.push(\"/\")\r\n            })\r\n    }\r\n\r\n    let validate = () => (state.email) ? true : false\r\n\r\n    return (\r\n\r\n        <div className=\"container mt-5\">\r\n              <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\">Forget Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Card className=\"card_body col-lg-8 col-sm-12 col-md-10 col-11 mx-auto\" style={{ width: '40rem' }}>\r\n                    <Form className=\"my-3\" onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group className=\"input-group\" controlId=\"formTitle\">\r\n                        <Form.Label className=\"d-block w-100\">Email</Form.Label>\r\n                            <div className=\"input-group-text\">\r\n                                <Envelope />\r\n                            </div>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter Email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\" disabled={!validate()}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table } from \"react-bootstrap\"\r\nimport moment from \"moment\"\r\nimport \"./style.css\"\r\n\r\n\r\nfunction ShowSlotsTiming({ passData }) {\r\n    const [currentLocation, setCurrentLocation] = useState([])\r\n\r\n    useEffect(() => {\r\n        setCurrentLocation(passData)\r\n        return () => console.log(\"ShowSlotsTiming Unmounted\")\r\n    }, [passData])\r\n\r\n    const getDuration = (array) => {\r\n        let day = array[0] > 0 ? `${array[0]} Day ` : \"\"\r\n        let hour = array[1] > 0 ? `${array[1]} Hour ` : \"\"\r\n        let min = array[2] > 0 ? `${array[2]} Mins ` : \"\"\r\n        return day + hour + min\r\n    }\r\n\r\n    return (\r\n        <div className=\"showslotsTiming\">\r\n            <Table className=\"showBookings card_body rounded-4 text-center my-3\" size=\"sm\" responsive striped bordered hover>\r\n                <thead className=\"align-content-center thead-dark\">\r\n                    <tr className=\"text-capitalize\">\r\n                        <th>slot no</th>\r\n                        <th>Start Date</th>\r\n                        <th>Start Time</th>\r\n                        <th>End Date</th>\r\n                        <th>End Time</th>\r\n                        <th>Time Duration</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bg-light\">\r\n                    {currentLocation.length > 0 ? currentLocation.map((data, index) => {\r\n                        let startTime = moment(data.userDate + \" \" + data.startTime)\r\n                        let endTime = moment(data.endDate + \" \" + data.endTime)\r\n                        let duration = getDuration(data.timeDuration)\r\n                        return <tr className=\"text-capitalize\" key={data.bookingId} >\r\n                            <td>{data.slots}</td>\r\n                            <td className=\"date\">{data.userDate}</td>\r\n                            <td className=\"time\">{startTime.format(\"h:mm a\")}</td>\r\n                            <td className=\"date\">{data.endDate}</td>\r\n                            <td className=\"time\">{endTime.format(\"h:mm a\")}</td>\r\n                            <td>{duration}</td>\r\n                        </tr>\r\n                    }) :\r\n                        <tr>\r\n                            <td className=\"no_data py-3\" colSpan=\"6\">No Reserved Slsots</td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ShowSlotsTiming\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Card, Row, Alert } from \"react-bootstrap\"\r\nimport ShowSlotsTiming from './ShowSlotsTiming.js'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport firebase from \"../firebase/index.js\"\r\nimport moment from \"moment\"\r\nimport { extendMoment } from 'moment-range';\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../style.css\"\r\n\r\n\r\nfunction NewBookings(props) {\r\n    const { address, totalSlots } = useParams()\r\n    const history = useHistory()\r\n    const momentRange = extendMoment(moment);\r\n    let initialState = {\r\n        username: \"\",\r\n        location: address,\r\n        userDate: \"\",\r\n        endDate: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        slots: undefined\r\n    }\r\n    let inititialErrors = {\r\n        isAfter: \"\",\r\n        conflicit: \"\",\r\n        timeLimit: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(initialState)\r\n    const [slotNo, setSlotNo] = useState(\"\")\r\n    const [bookings, setBookings] = useState([])\r\n    let [noOfSlots, setNoOfSlots] = useState([])\r\n    let [showSlots, setShowSlots] = useState(false)\r\n    let [slotsAvailablity, setSlotsAvailablity] = useState(false)\r\n    let [bookSlot, setBookSlot] = useState(false)\r\n    let [passData, setPassData] = useState([])\r\n    const [success, setSuccess] = useState(false)\r\n    let [error, setError] = useState(inititialErrors)\r\n    let { location, userDate, endDate, startTime, endTime } = state\r\n\r\n    const [currentUser, setCurrentUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user !== null && user?.email !== \"admin@gmail.com\") {\r\n                setCurrentUser(user)\r\n            }\r\n        });\r\n        firebase.database().ref(\"clients/\").on(\"value\", snapshot => {\r\n            let newArray = []\r\n            Object.keys(snapshot.val()).map(user => {\r\n                if (snapshot.val()[user].hasOwnProperty('bookings')) {\r\n                    return Object.keys(snapshot.val()[user]?.bookings).map(val => newArray.push(snapshot.val()[user]?.bookings[val]))\r\n                }\r\n            })\r\n            // console.log(\"newArray\", newArray)\r\n            setBookings(newArray)\r\n        })\r\n\r\n        setNoOfSlots(Array(parseInt(totalSlots)).fill(1).map((x, y) => x + y))\r\n\r\n        return () => console.log(\"newbOOKING unmounted\")\r\n    }, [])\r\n\r\n\r\n    const add = () => {\r\n        const hours = moment.utc(moment(userDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime))).format(\"H\")\r\n        const min = moment.utc(moment(userDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime))).format(\"mm\")\r\n        return moment(userDate + ' ' + startTime).add(hours, \"hours\").add(min, \"minutes\")\r\n    }\r\n\r\n    const totalTimeArr = () => {\r\n        const hour = moment.utc(moment(endDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime), \"hours\"))._i\r\n        const getDays = moment.utc(moment(endDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime), \"days\"))._i\r\n        const getHours = moment.utc(moment(endDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime), \"hours\"))._i - (getDays * 24)\r\n        const getMinutes = moment.utc(moment(endDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime), \"minutes\"))._i - (hour * 60)\r\n        return [getDays, getHours, getMinutes]\r\n    }\r\n\r\n    let checkSlot = () => {\r\n        console.log(state)\r\n        const totalTime = moment.utc(moment(userDate + \" \" + endTime).diff(moment(userDate + \" \" + startTime))).format(\"H:mm\")\r\n\r\n        console.log(\"totalTime\", add())\r\n        console.log(\"TotalTimeArr\", totalTimeArr())\r\n\r\n        let timeLimit = userDate == endDate ? moment(userDate + \" \" + totalTime).isAfter(userDate + ' ' + \"00:10\") : true\r\n        let isAfter = userDate == endDate ? add().isAfter(userDate + ' ' + \"23:59\") : false;\r\n        if (isAfter) {\r\n            setError({ ...error, isAfter: \"End Time can not be grater than start Time\" })\r\n            console.log(\"isafter\", isAfter, error.isAfter)\r\n        }\r\n        else if (!timeLimit) {\r\n            setError({ ...error, timeLimit: \"Time duration must be greater than 10 Minutes\" })\r\n            console.log(\"timeLimit\", timeLimit, error.timeLimit)\r\n        }\r\n        else {\r\n            setShowSlots(true)\r\n            setBookSlot(true)\r\n            let date = () => bookings.filter((val, index) => {\r\n                if (val.location == location) {\r\n                    const date1 = [moment(userDate + \" \" + startTime), moment(endDate + \" \" + endTime)];\r\n                    const date2 = [moment(val.userDate + \" \" + val.startTime), moment(val.endDate + \" \" + val.endTime)];\r\n\r\n                    const range = momentRange.range(date1);\r\n                    const range2 = momentRange.range(date2);\r\n\r\n                    // has overlapping\r\n                    if (range.overlaps(range2)) {\r\n                        console.log(\"overlaps completely\")\r\n                        if ((range2.contains(range, true) || range.contains(range2, true)) && !date1[0].isSame(date2[0])) {\r\n                            setError({ ...error, conflicit: `Some Slots are missing bcz Your Time range completely conflict at it` });\r\n                            return true\r\n                        }\r\n                        else {\r\n                            console.log(\"overlaps partially\")\r\n                            setError({ ...error, conflicit: `Some Slots are missing bcz Your Time range partially conflict at it` });\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            console.log(\"date()\", date())\r\n            setPassData(date())\r\n            if (date().length > 0) {\r\n                let copySlots = Array(parseInt(totalSlots)).fill(1).map((x, y) => x + y)\r\n                let toRemove = []\r\n                date().map(val => toRemove.push(parseInt(val.slots)))\r\n                console.log(\"toremove IF\", toRemove)\r\n                copySlots = copySlots.filter(val => !toRemove.includes(val))\r\n                console.log(\"nofslots IF\", copySlots)\r\n                setNoOfSlots(copySlots);\r\n\r\n                // setNoOfSlots(noOfSlots.filter(no => no !== val.slots))\r\n            }\r\n            else {\r\n                console.log(\"noOfSlots Else\", noOfSlots)\r\n                setNoOfSlots(Array(parseInt(totalSlots)).fill(1).map((x, y) => x + y))\r\n            }\r\n        }\r\n    }\r\n\r\n    const startTimeValidate = () => {\r\n        return userDate ? true : false\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n        setShowSlots(false)\r\n        setBookSlot(false)\r\n        setSlotNo(\"\")\r\n        setPassData([])\r\n        setError(inititialErrors)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { uid } = firebase.auth().currentUser\r\n\r\n        setBookSlot(false)\r\n        const key = firebase.database().ref(`clients/${uid}/`).child(\"bookings\").push().key\r\n        let bookingObj = {\r\n            bookingId: key, slots: slotNo, timeDuration: totalTimeArr(),\r\n            uid, location, userDate, startTime, endDate, endTime\r\n        }\r\n        console.log(\"bookingObj\", bookingObj)\r\n        firebase.database().ref(`clients/${uid}/`).child(\"bookings\").child(key).set(\r\n            bookingObj,\r\n            err => {\r\n                if (err) {\r\n                    console.log(\"error\", err)\r\n                }\r\n                else {\r\n                    setSuccess(true)\r\n                    setTimeout(() => {\r\n                        setSuccess(false)\r\n                    }, 5000);\r\n                    setState(initialState)\r\n                    setSlotNo(\"\")\r\n                    setShowSlots(false)\r\n                    setSlotsAvailablity(false)\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n    let validate = () => (location && endDate && userDate && startTime && endTime && slotNo) ? true : false\r\n    let slotsValidate = () => (userDate && endDate && startTime && endTime) ? true : false\r\n\r\n\r\n    return (\r\n        !!Object.keys(currentUser).length ?\r\n            <>\r\n                <div className=\"container my-3\">\r\n                    <div className=\"users_heading\">\r\n                        <h2 className=\"text-center text-capitalize\">\r\n                            Parking Booking\r\n                </h2>\r\n                    </div>\r\n                    <div className=\"row show\">\r\n                        <Card className=\"card_body col-lg-8 col-sm-12 col-md-10 col-11 mx-auto \" style={{ width: '40rem' }}>\r\n                            <Form className=\"my-3\" onSubmit={handleSubmit}>\r\n\r\n                                <Row>\r\n                                    <Form.Group className=\"col-md-6 col-12\" controlId=\"exampleForm.dateTime1\">\r\n                                        <Form.Label>Start Date</Form.Label>\r\n                                        <Form.Control type=\"date\" min={moment().format(\"YYYY-MM-DD\")} name=\"userDate\" value={userDate}\r\n                                            onChange={handleChange} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"col-md-6 col-12\" controlId=\"exampleForm.dateTime2\">\r\n                                        <Form.Label>Start Time</Form.Label>\r\n                                        <Form.Control type=\"time\" name=\"startTime\"\r\n                                            value={startTime}\r\n                                            min={userDate == moment().format(\"YYYY-MM-DD\") ? moment().format(\"H:mm\") : \"\"}\r\n                                            disabled={!startTimeValidate()}\r\n                                            onChange={handleChange}\r\n                                        />\r\n\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Form.Group className=\"col-md-6 col-12\" controlId=\"exampleForm.dateTime3\">\r\n                                        <Form.Label>End Date</Form.Label>\r\n                                        <Form.Control type=\"date\"\r\n                                            name=\"endDate\" value={endDate}\r\n                                            min={moment(userDate).format(\"YYYY-MM-DD\")}\r\n                                            onChange={handleChange} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"col-md-6 col-12\" controlId=\"exampleForm.dateTime4\">\r\n                                        <Form.Label>End Time (For)</Form.Label>\r\n                                        <Form.Control type=\"time\" name=\"endTime\"\r\n                                            value={endTime}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                        {error.isAfter || error.timeLimit ? <small className=\"text-danger\">{error.isAfter || error.timeLimit}</small> : null}\r\n                                        {success ? <small className=\"text-success font-weight-bold\">Booking added Successfully</small> : null}\r\n\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <div className=\"container\">\r\n                                    <Row className=\"d-flex justify-content-around\">\r\n                                        {!bookSlot ? <Button type=\"button\" className=\"col-12 mb-2 mb-md-0 mb-lg-0\" variant=\"outline-primary\" color=\"primary\" onClick={_ => { checkSlot(); setSlotsAvailablity(false) }} disabled={!slotsValidate()}>Show Slots</Button>\r\n                                            : <Button className=\"col-12\" variant=\"primary\" type=\"submit\" disabled={!validate()}>Book Slot</Button>\r\n                                        }\r\n                                    </Row>\r\n                                </div>\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n\r\n                    <div className=\"row my-3 slots_Card\">\r\n                        <Card className=\"container-fluid card_body bottom_card col-lg-11 col-sm-12 col-md-11 col-11 mx-auto p-3\" >\r\n                            <div className=\"slots_nav\">\r\n                                {userDate && <small className=\"text-info text-center\">To see {!slotsAvailablity ? \"Unavailable\" : \"Available\"} Slots  <span style={{ cursor: \"pointer\", color: \"red\" }} onClick={_ => setSlotsAvailablity(!slotsAvailablity)}>&nbsp; Click Here</span></small>}\r\n                            </div>\r\n                            {slotsAvailablity ?\r\n                                <ShowSlotsTiming passData={passData} />\r\n                                : showSlots ?\r\n                                    <>\r\n                                        <p className=\"text-center text-info mt-2 select\">Select any one of the folllowing Available Slots</p>\r\n                                        <Row className=\"text-center\">\r\n                                            {noOfSlots.map(slot => {\r\n                                                return <Button className={`${slotNo === slot ? \"buttonActive\" : \"\"} `} variant=\"warning\" onClick={() => setSlotNo(slot)} key={slot}>{slot}</Button>\r\n                                            })}\r\n                                            <p className=\"w-100 d-block mt-2\" style={{ color: \"white\" }}>{error.conflicit} </p>\r\n                                        </Row>\r\n                                    </> : <p className=\"text-center my-auto\" style={{ color: \"white\" }}>Press (Show Slots) Button After filling all fields To see available Slots</p>\r\n                            }\r\n                        </Card>\r\n                    </div >\r\n                </div >\r\n            </> : null\r\n    )\r\n}\r\n\r\nexport default withRouter(NewBookings);\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Row, Col, Button, Spinner } from \"react-bootstrap\"\r\nimport { useHistory, withRouter } from \"react-router-dom\"\r\nimport firebase from '../Components/firebase/index'\r\n\r\nfunction Dashboard() {\r\n    let history = useHistory()\r\n    const [currentUser, setcurrentUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (!!user) {\r\n                firebase.database().ref(\"clients/\").child(user.uid).on(\"value\", snapshot => {\r\n                    setcurrentUser(snapshot.val())\r\n                })\r\n            } else {\r\n                setcurrentUser({})\r\n            }\r\n        });\r\n        return () => console.log(\"Dashboard Unmounted\")\r\n    }, [firebase.auth().currentUser])\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"users_heading\">\r\n                    <h2 className=\"text-center text-capitalize\">Dashboard</h2>\r\n                </div>\r\n                {Object.keys(currentUser).length > 0 ?\r\n                    <div className=\"row\">\r\n                        <Card className=\"card_body col-lg-8 col-sm-9 col-md-10 col-11 mx-auto mt-4\" style={{ width: '40rem' }}>\r\n                            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                            <Card.Body>\r\n                                <Card.Title className=\"text-center text-capitalize font-italic text-info\"\r\n                                    style={{ fontSize: 25 }}\r\n                                >Welcome Dear ! {currentUser ? currentUser?.username : \"User\"}</Card.Title>\r\n                                < Row className=\"mt-3\">\r\n                                    <Col className=\"text-center\">\r\n                                        <Button className=\"rounded-5 px-4 py-2 mb-0 mb-2 mb-md-0 mb-lg-0\" variant=\"success\"\r\n                                            onClick={() => history.push(\"/locations\")}>Show Locations</Button>\r\n\r\n                                        <Button className=\"rounded-5 mx-3 px-4 py-2\" variant=\"success\"\r\n                                            onClick={() => history.push(\"/showBookings\")}>Show Bookings</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div >\r\n                    : <div className=\"text-center mt-5\">\r\n                        <Spinner size=\"lg\" animation=\"border\" variant=\"info\" />\r\n                    </div>\r\n                }\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Spinner } from \"react-bootstrap\"\r\nimport { ArrowLeftCircleFill, ArrowRight, ArrowRightCircleFill } from \"react-bootstrap-icons\"\r\nimport firebase from \"../firebase/index\"\r\nimport moment from \"moment\"\r\nimport { useHistory, withRouter } from \"react-router-dom\"\r\nimport \"./style.css\"\r\n\r\n\r\nfunction ShowBookings() {\r\n    const history = useHistory()\r\n    const [bookings, setBookings] = useState({})\r\n    const [currentUser, setCurrentUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        const get = async () => {\r\n            await firebase.auth().onAuthStateChanged(function (user) {\r\n                if (user !== null && user?.email !== \"admin@gmail.com\") {\r\n                    firebase.database().ref(\"clients/\").child(user?.uid).on(\"value\", snapshot => {\r\n                        setCurrentUser(snapshot.val())\r\n                        if (snapshot.val()?.bookings) {\r\n                            setBookings(snapshot.val()?.bookings)\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        get()\r\n    }, [])\r\n\r\n    const getDuration = (array) => {\r\n        let day = array[0] > 0 ? `${array[0]} Day ` : \"\"\r\n        let hour = array[1] > 0 ? `${array[1]} Hour ` : \"\"\r\n        let min = array[2] > 0 ? `${array[2]} Mins ` : \"\"\r\n        return day + hour + min\r\n    }\r\n\r\n    return (\r\n        Object.keys(currentUser).length ?\r\n            <>\r\n                <div className=\"container my-5\" >\r\n                    <div className=\"users_heading\">\r\n                        <h2 className=\"text-center text-capitalize\" >\r\n                            <ArrowLeftCircleFill onClick={() => history.goBack()} style={{ fontWeight: \"bold\", cursor: \"pointer\" }} />\r\n                    &nbsp;Your Bookings&nbsp;\r\n                    <ArrowRightCircleFill onClick={() => history.goForward()} style={{ fontWeight: \"bold\", cursor: \"pointer\" }} />\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {Object.keys(bookings).length === 0 ?\r\n                            <div className=\"text-center mx-auto\">\r\n                                <h2 className=\"no_bookings\">No Bookings Yet</h2>\r\n                            </div>\r\n                            : <Table className=\"showBookings card_body rounded-4 text-center\" responsive striped bordered hover>\r\n                                <thead className=\"align-content-center thead-dark\">\r\n                                    <tr className=\"text-capitalize\">\r\n                                        <th>#</th>\r\n                                        <th>location</th>\r\n                                        <th>slot no</th>\r\n                                        <th>Start Date</th>\r\n                                        <th>Start Time</th>\r\n                                        <th>End Date</th>\r\n                                        <th>End Time</th>\r\n                                        <th>Time Duration</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-light\">\r\n                                    {Object.keys(bookings).map((key, index) => {\r\n                                        let startTime = moment(bookings[key].userDate + \" \" + bookings[key].startTime)\r\n                                        let endTime = moment(bookings[key].endDate + \" \" + bookings[key].endTime)\r\n                                        let duration = getDuration(bookings[key].timeDuration)\r\n                                        return <tr className=\"text-capitalize\" key={key}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{bookings[key].location}</td>\r\n                                            <td>{bookings[key].slots}</td>\r\n                                            <td className=\"date\">{bookings[key].userDate}</td>\r\n                                            <td className=\"time\">{startTime.format(\"h:mm a\")}</td>\r\n                                            <td className=\"date\">{bookings[key].endDate}</td>\r\n                                            <td className=\"time\">{endTime.format(\"h:mm a\")}</td>\r\n                                            <td>{duration}</td>\r\n                                        </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>}\r\n                    </div>\r\n                </div >\r\n            </> : null\r\n    )\r\n}\r\n\r\nexport default withRouter(ShowBookings)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport firebase from '../Components/firebase/index'\r\n\r\nexport default function Dashboard() {\r\n    let history = useHistory()\r\n    let [admin, setAdmin] = useState({})\r\n\r\n    const checkUser = () => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (!!user) {\r\n                firebase.database().ref(\"clients/\").child(user.uid).on(\"value\", snapshot => {\r\n                    setAdmin(snapshot.val())\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"users_heading\">\r\n                    <h2 className=\"text-center text-capitalize\">Dashboard</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Card className=\"card_body col-lg-8 col-sm-9 col-md-10 col-11 mx-auto mt-4\" style={{ width: '40rem' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-center text-capitalize font-italic text-info\" style={{ fontSize: 25 }}>\r\n                                Welcome Dear ! {admin?.username}\r\n                            </Card.Title>\r\n                            < Row className=\"mt-3\">\r\n                                <Col className=\"text-center\">\r\n                                    <Button className=\" rounded-5 px-4 py-2 mb-0 mb-2 mb-md-0 mb-lg-0\" variant=\"success\"\r\n                                        onClick={() => history.push(\"./allusers\")}>All Users</Button>\r\n\r\n                                    <Button className=\"rounded-5 mx-3 px-4 py-2\" variant=\"success\"\r\n                                        onClick={() => history.push(\"./allbookings\")}>All Bookings</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div >\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nfunction ActionsButton({ onClick, size, variant, title }) {\r\n\r\n    return (\r\n        <Button\r\n            className=\"m-1\"\r\n            size={size}\r\n            variant={variant}\r\n            onClick={onClick}>\r\n            {title}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ActionsButton\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table } from \"react-bootstrap\"\r\nimport firebase from \"../Components/firebase/index\"\r\nimport ActionsButton from \"./ActionsButton\"\r\nimport { blockUser, deleteUserData } from \"../utils/index\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\n\r\n\r\nfunction AllBookings() {\r\n    const [allUsers, setAllUsers] = useState({})\r\n    const [deleteUser, setDeleteUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                firebase.database().ref(\"clients/\").on(\"value\", snapshot => {\r\n                    if (!!snapshot.val()) {\r\n                        let allusers = Object.keys(snapshot.val()).filter(user => {\r\n                            return snapshot.val()[user].username !== \"admin\"\r\n                        }).map(user => {\r\n                            return snapshot.val()[user]\r\n                        })\r\n                        // console.log(\"except admin\", allusers)\r\n                        setAllUsers(allusers)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n        return () => false\r\n    }, []);\r\n\r\n    const adminDeleteUser = async (user) => {\r\n        console.log(user)\r\n        try {\r\n            const rawResponse = await fetch(`http://localhost:5000/users/delete/${user.key}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            const response = await rawResponse.json();\r\n            console.log(response);\r\n            if (response?.success) {\r\n                deleteUserData(user);\r\n                toast.success('🦄 User Deleted', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n            toast.error(response?.message, {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setDeleteUser({})\r\n        } catch (err) {\r\n            setDeleteUser({})\r\n            console.log({ err })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\" >All Users</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n                {Object.keys(allUsers).length === 0 ?\r\n                    <div className=\"text-center mx-auto\">\r\n                        <h2 className=\"no_bookings\">No Users Yet</h2>\r\n                    </div>\r\n                    : <Table className=\"allUsers card_body text-center\" responsive striped bordered hover>\r\n                        <thead className=\"align-content-center thead-dark\">\r\n                            <tr className=\"text-capitalize\">\r\n                                <th>username</th>\r\n                                <th>email</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-light\">\r\n                            {allUsers.map(user => {\r\n                                return (\r\n                                    <tr key={user.key}>\r\n                                        <td className=\"text-capitalize\">{user.username}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td className=\"d-flex justify-content-around flex-wrap\">\r\n                                            <ActionsButton\r\n                                                size=\"sm\"\r\n                                                variant=\"danger\"\r\n                                                title={user.block ? \"Unblock\" : \"Block\"}\r\n                                                onClick={_ => blockUser(user, user.block)}\r\n                                            />\r\n                                            <ActionsButton\r\n                                                size=\"sm\"\r\n                                                variant=\"danger\"\r\n                                                title=\"Delete\"\r\n                                                onClick={_ => setDeleteUser(user)}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>}\r\n            </div>\r\n            {!!Object.keys(deleteUser).length && (\r\n                <SweetAlert\r\n                    warning\r\n                    showCancel\r\n                    confirmBtnText=\"Delete it!\"\r\n                    confirmBtnBsStyle=\"danger\"\r\n                    // title=\"Do you wanna Delete User?\"\r\n                    onConfirm={() => {\r\n                        adminDeleteUser(deleteUser)\r\n                    }}\r\n                    onCancel={() => {\r\n                        setDeleteUser({});\r\n                        return console.log(\"admin didn't delete user\")\r\n                    }}\r\n                    allowEscape={false}\r\n                >\r\n                    Do you wanna Delete User?\r\n                </SweetAlert>\r\n            )}\r\n            <ToastContainer />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AllBookings;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Spinner, Container, Form, Button } from \"react-bootstrap\"\r\nimport firebase from \"../Components/firebase/index\"\r\nimport moment from \"moment\"\r\nimport './style.css';\r\n\r\n\r\nfunction AllBookings() {\r\n    const initialState = {\r\n        sort: \"\",\r\n        address: \"\"\r\n    }\r\n    const [state, setState] = useState(initialState)\r\n    const [bookings, setBookings] = useState([])\r\n    const [newArray, setnewArray] = useState([])\r\n    const [sorting, setSorting] = useState(false)\r\n    const [allLocations, setAllLocations] = useState([])\r\n\r\n    const { sort, address } = state\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                firebase.database().ref(\"clients/\").on(\"value\", snapshot => {\r\n                    let newArray = []\r\n                    Object.keys(snapshot.val()).map(user => {\r\n                        if (snapshot.val()[user].hasOwnProperty('bookings') === true) {\r\n                            return Object.keys(snapshot.val()[user]?.bookings).map(val => newArray.push(snapshot.val()[user]?.bookings[val]))\r\n                        }\r\n                    })\r\n                    // console.log({ newArray })\r\n                    setnewArray(newArray)\r\n                    setBookings(newArray)\r\n\r\n                    // this is to get unique locations\r\n                    let location = newArray.map(a => a.location).filter((v, i, a) => a.indexOf(v) === i);\r\n                    setAllLocations(location)\r\n                })\r\n            } else {\r\n                return false\r\n            }\r\n        });\r\n        return () => false\r\n    }, [])\r\n\r\n    const dateTime = () => {\r\n        let array = [...newArray];\r\n        array = array.sort((a, b) => {\r\n            return new Date(b.userDate).getTime() - new Date(a.userDate).getTime()\r\n        });\r\n        array = array.sort((a, b) => {\r\n            if (new Date(a.userDate).getTime() === new Date(b.userDate).getTime()) {\r\n                if (Number(b.startTime.split(\":\")[0]) < Number(a.startTime.split(\":\")[0])) {\r\n                    return 1\r\n                }\r\n                else if (Number(b.startTime.split(\":\")[0]) === Number(a.startTime.split(\":\")[0])) {\r\n                    if (Number(b.startTime.split(\":\")[1]) < Number(a.startTime.split(\":\")[1])) {\r\n                        return 1\r\n                    }\r\n                }\r\n                else {\r\n                    return -1\r\n                }\r\n            }\r\n            else {\r\n                return 0\r\n            }\r\n        });\r\n\r\n        setnewArray(array)\r\n    }\r\n\r\n    const sortBy = () => {\r\n        if (sort === \"datetime\") {\r\n            dateTime()\r\n        }\r\n        else if (sort === \"date\") {\r\n            let array = [...newArray]\r\n            // array = array.sort((a, b) => (moment(b.userDate).format('YYYYMMDD') - moment(a.userDate).format('YYYYMMDD')))\r\n            array = array.sort((a, b) => {\r\n                return new Date(b.userDate).getTime() - new Date(a.userDate).getTime()\r\n            });\r\n            setnewArray(array)\r\n        }\r\n        else if (sort === \"slot\") {\r\n            let array = [...newArray]\r\n            array.sort((a, b) => a.slots - b.slots)\r\n            setnewArray(array)\r\n        }\r\n        else {\r\n            setnewArray(bookings)\r\n        }\r\n    }\r\n\r\n    const filterBy = () => {\r\n        if (address) {\r\n            if (address == \"all\") {\r\n                let array = [...bookings]\r\n                setnewArray(array)\r\n            }\r\n            else {\r\n                let array = [...bookings]\r\n                array = array.sort((a, b) => {\r\n                    return new Date(b.userDate).getTime() - new Date(a.userDate).getTime()\r\n                });\r\n                array = array.sort((a, b) => {\r\n                    if (new Date(a.userDate).getTime() === new Date(b.userDate).getTime()) {\r\n                        if (Number(b.startTime.split(\":\")[0]) < Number(a.startTime.split(\":\")[0])) {\r\n                            return 1\r\n                        } else {\r\n                            return -1\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 0\r\n                    }\r\n                });\r\n                array = array.filter(data => data.location == address)\r\n                // console.log(\"arrayFilter\", array)\r\n                setnewArray(array)\r\n            }\r\n        }\r\n        else {\r\n            setnewArray(bookings)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        sortBy()\r\n    }\r\n\r\n    const getDuration = (array) => {\r\n        let day = array[0] > 0 ? `${array[0]} Day ` : \"\"\r\n        let hour = array[1] > 0 ? `${array[1]} Hour ` : \"\"\r\n        let min = array[2] > 0 ? `${array[2]} Mins ` : \"\"\r\n        return day + hour + min\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\" >All Users Bookings</h2>\r\n                <p>{!sorting ? \"to See Filters\" : \"to hide Filters\"} <span onClick={_ => setSorting(!sorting)}>click here</span></p>\r\n            </div>\r\n            <div className=\"row\">\r\n                {newArray.length === 0 ?\r\n                    <div className=\"text-center mx-auto\">\r\n                        <Spinner animation=\"border\" size=\"lg\" variant=\"primary\" />\r\n                    </div>\r\n                    : <div className=\"col-lg-12 col-12 allBookings\">\r\n                        {sorting ?\r\n                            <Container className=\"contrainer1\">\r\n                                <Form className=\"row\" onSubmit={handleSubmit}>\r\n\r\n                                    <Form.Group className=\"text-capitalize col-md-3 \" controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Control as=\"select\" name=\"address\"\r\n                                            value={address}\r\n                                            onChange={(e) => handleChange(e)}>\r\n                                            <option value=\"\">Select Location</option>\r\n                                            <option value=\"all\">All Locations</option>\r\n                                            {allLocations.map(loc => {\r\n                                                return <option key={loc} value={loc}>{loc}</option>\r\n                                            })}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"col-md-3\">\r\n                                        <Button className=\"w-100\" variant=\"primary\"\r\n                                            disabled={!address}\r\n                                            onClick={() => filterBy()}>Filter</Button>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"text-capitalize col-md-3 \" controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Control as=\"select\" name=\"sort\"\r\n                                            value={sort}\r\n                                            onChange={(e) => handleChange(e)}>\r\n                                            <option value=\"\">Select Sort</option>\r\n                                            <option value=\"date\">by Date</option>\r\n                                            <option value=\"datetime\">by Date Time</option>\r\n                                            <option value=\"slot\">by slot</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"col-md-3\">\r\n                                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\">Sort</Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Container> : null}\r\n                        <div className=\"tableDiv\">\r\n                            <Table className=\"allBookings text-capitalize card_body rounded-4 text-center\" responsive striped bordered hover>\r\n                                <thead className=\"align-content-center thead-dark\">\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>location</th>\r\n                                        <th>slot no</th>\r\n                                        <th>Start Date</th>\r\n                                        <th>Start Time</th>\r\n                                        <th>End Date</th>\r\n                                        <th>End Time</th>\r\n                                        <th>Time Duration</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-light\">\r\n                                    {newArray.map((user, index) => {\r\n                                        let startTime = moment(user.userDate + \" \" + user.startTime)\r\n                                        let endTime = moment(user.endDate + \" \" + user.endTime)\r\n                                        let duration = getDuration(user.timeDuration)\r\n\r\n                                        return <tr key={user.bookingId}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{user.location}</td>\r\n                                            <td>{user.slots}</td>\r\n                                            <td className=\"date\">{user.userDate}</td>\r\n                                            <td className=\"time\">{startTime.format(\"h:mm a\")}</td>\r\n                                            <td className=\"date\">{user.endDate}</td>\r\n                                            <td className=\"time\">{endTime.format(\"h:mm a\")}</td>\r\n                                            <td className=\"duration\">{duration}</td>\r\n                                        </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AllBookings;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport firebase from \"../Components/firebase/index\"\r\nimport \"./style.css\"\r\n\r\nfunction AddLocations() {\r\n\r\n    let initialState = {\r\n        locationName: \"\",\r\n        address: \"\",\r\n        slots: 0\r\n    }\r\n    let initialErrors = {\r\n        locationName: \"\",\r\n        address: \"\",\r\n    }\r\n    const [state, setState] = useState(initialState)\r\n    const [success, setSuccess] = useState(false)\r\n    const [allLocations, setAllLocations] = useState({})\r\n    const [validationError, setvalidationError] = useState(initialErrors)\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref(\"admin\").child(\"locations\").on(\"value\", snapshot => {\r\n            setAllLocations(snapshot.val())\r\n        })\r\n        return () => false\r\n    }, [])\r\n\r\n    let { locationName, address, slots } = state\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n        setvalidationError(initialErrors)\r\n    }\r\n    const titleCase = str => {\r\n        let str1 = str.toLowerCase()\r\n        return str1.replace(/(^|\\s)\\S/g, function (t) { return t.toUpperCase() });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let checkLocation = Object.keys(allLocations).find(key => {\r\n            return allLocations[key].locationName === titleCase(locationName)\r\n        })\r\n        if (!!Object.keys(checkLocation ?? []).length) {\r\n            console.log({ checkLocation })\r\n            setvalidationError({ ...validationError, locationName: \"This Location is Already Exists\" })\r\n        }\r\n        else {\r\n            const loc_key = firebase.database().ref(\"admin/\").child(\"locations\").push().key\r\n            const obj = { locationId: loc_key, locationName: titleCase(locationName), slots }\r\n            firebase.database().ref(\"admin/\").child(\"locations\").child(loc_key).set(\r\n                obj,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(\"Location Error\", err)\r\n                    }\r\n                    else {\r\n                        setSuccess(true)\r\n                        setTimeout(() => {\r\n                            setSuccess(false)\r\n                        }, 4000);\r\n                        console.log(\"state\", obj)\r\n                        setState(initialState)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        return locationName && slots ? true : false\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\">Add Locations</h2>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Card className=\"card_body col-lg-8 col-sm-12 col-md-10 col-11 mx-auto py-3\" style={{ width: '40rem' }}>\r\n                    {success ? <Alert className=\"\" variant=\"success\">Location added Successfully</Alert> : null}\r\n\r\n                    <Form className=\"mb-3\" onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formTitle\">\r\n                            <Form.Label className=\"ml-1\">Location</Form.Label>\r\n                            <Form.Control className=\"\" type=\"text\" placeholder=\"Enter Location Name\"\r\n                                name=\"locationName\"\r\n                                value={locationName}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <Form.Text className=\"text-danger ml-1\">{validationError.locationName}</Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>No of Slots</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"slots\" value={slots} onChange={handleChange}>\r\n                                <option value=\"\">Select SLots</option>\r\n                                {Array(10).fill(1).map((x, y) => x + y).map(no => {\r\n                                    return <option key={no} value={`${no}`}>{no}</option>\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\" disabled={!validate()}>Submit</Button>\r\n                    </Form>\r\n\r\n                    <div className=\"text-center mb-2 d-flex flex-column justify-content-center\">\r\n                        <b>OR</b>\r\n                        <div>\r\n                            <Link to=\"/viewLocations\" className=\"mx-2\">View Locations</Link>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddLocations\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Spinner } from \"react-bootstrap\"\r\nimport firebase from \"../Components/firebase/index\"\r\nimport moment from \"moment\"\r\nimport './style.css';\r\n\r\n\r\nfunction ViewLocations() {\r\n\r\n    const [allLocations, setAllLocations] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref(\"admin\").child(\"locations\").on(\"value\", snapshot => {\r\n            // console.log(\"Firebase Locations\", snapshot.val())\r\n            setAllLocations(snapshot.val())\r\n        })\r\n        return () => console.log(\"\")\r\n    }, [])\r\n\r\n\r\n    return (\r\n         <div className=\"container my-5\">\r\n            <div className=\"users_heading\">\r\n                <h2 className=\"text-center text-capitalize\" >All Locations</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n                {Object.keys(allLocations).length === 0 ?\r\n                    <div className=\"text-center mx-auto\">\r\n                        <Spinner animation=\"border\" size=\"lg\" variant=\"primary\" />\r\n                    </div>\r\n                    : <div className=\"col-lg-12 col-12 allBookings\">\r\n                        <Table size={window.innerWidth < 500 ? \"sm\" : \"md\"} className=\"text-capitalize card_body rounded-4 text-center\" responsive striped bordered hover>\r\n                            <thead className=\"align-content-center thead-dark\">\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Slots</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-light\">\r\n                                {Object.keys(allLocations).map((key, index) => {\r\n                                return <tr key={allLocations[key].locationId}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{allLocations[key].locationName}</td>\r\n                                        <td>{allLocations[key].slots}</td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewLocations\r\n","export default __webpack_public_path__ + \"static/media/parking.b54aa71b.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport firebase from \"../Components/firebase/index\"\r\nimport parkingApp from \"../parking.png\"\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function NavBar() {\r\n  let history = useHistory()\r\n\r\n  const [loginUser, setloginUser] = useState({})\r\n  const [admin, setAdmin] = useState({})\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (!!user) {\r\n        if (user?.email === \"admin@gmail.com\") {\r\n          setAdmin(user)\r\n        }\r\n        else {\r\n          setloginUser(user)\r\n        }\r\n      }\r\n      else {\r\n        setAdmin({})\r\n        setloginUser({})\r\n      }\r\n    })\r\n    return () => console.log(\"\")\r\n  }, [])\r\n\r\n  const adminNav = (Object.keys(admin).length) ?\r\n    <>\r\n      <Nav.Link onClick={() => history.push(\"/allusers\")}>All Users</Nav.Link>\r\n      <Nav.Link onClick={() => history.push(\"/allbookings\")}>All Bookings</Nav.Link>\r\n      <Nav.Link onClick={() => history.push(\"/addLocations\")}>Add Locations</Nav.Link>\r\n      <Nav.Link onClick={() => history.push(\"/viewLocations\")}>View Loations</Nav.Link>\r\n    </> : null\r\n\r\n  const loginNav = (Object.keys(loginUser).length) ?\r\n    <>\r\n      <Nav.Link onClick={() => history.push(\"/locations\")}>Locations</Nav.Link>\r\n      <Nav.Link onClick={() => history.push(\"/showbookings\")}>My Bookings</Nav.Link>\r\n    </> : null\r\n\r\n  const pushTo = !!Object.keys(admin).length ? \"/admindashboard\" : \"/dashboard\"\r\n  const logoNav =\r\n    <Navbar.Brand style={{ cursor: \"pointer\" }}\r\n      onClick={() => history.push(!firebase.auth().currentUser ? \"/\" : pushTo)}>\r\n      <img src={parkingApp} className=\"logo\" />\r\n    </Navbar.Brand>\r\n\r\n  const signOut = () => {\r\n    firebase.auth().signOut()\r\n    localStorage.removeItem(\"loginUser\")\r\n    window.location.reload()\r\n    console.log(\"LogOut\")\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Toggle className={`responsive-navbar-nav`} aria-controls=\"responsive-navbar-nav\" />\r\n        {logoNav}\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"navbarLinks  mr-auto\">\r\n            {!!Object.keys(admin).length ?\r\n              adminNav\r\n              : !!Object.keys(loginUser).length ? loginNav : null\r\n            }\r\n          </Nav>\r\n\r\n          <Form inline>\r\n            <span className=\"mt-2 mt-md-0 mt-lg-0\">{!!Object.keys(loginUser).length || !!Object.keys(admin).length ?\r\n              <Button className=\"btn btn-block\" variant=\"info\" size=\"\" onClick={signOut}>Logout</Button>\r\n              : <Button className=\"btn btn-block\" variant=\"info\" size=\"\" onClick={() => history.push(\"/signup\")}>Sign Up</Button>}\r\n            </span>\r\n          </Form>\r\n\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div >\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ block, component: Component, redirectTo, isLogin, isAdmin, isUser, ...rest }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"loginUser\")) ? Object.keys(JSON.parse(localStorage.getItem(\"loginUser\"))).length : null;\r\n  // console.log(JSON.parse(localStorage.getItem(\"loginUser\")), \" user privated\");\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isAdmin || isUser) {\r\n          return <Redirect to={redirectTo} />\r\n        }\r\n\r\n        return (isLogin ? !user : user) ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Locations from '../Components/AddBooking/Locations';\r\nimport Login from \"../Components/Login\"\r\nimport SignUp from \"../Components/Signup\"\r\nimport forgetPassword from \"../Components/forgetPassword\"\r\nimport NewBookings from \"../Components/AddBooking/NewBooking\"\r\nimport Dashboard from \"../Components/Dashboard\"\r\nimport ShowBookings from '../Components/AddBooking/ShowBookings';\r\nimport AdminDashboard from '../Admin/Dashboard';\r\nimport Allusers from '../Admin/Allusers';\r\nimport AllBookings from '../Admin/AllBookings';\r\nimport AddLocations from '../Admin/AddLocations';\r\nimport ViewLocations from '../Admin/ViewLocations';\r\nimport firebase from \"../Components/firebase/index\"\r\nimport NavBar from '../Components/NavBar';\r\nimport PrivateRoutes from \"./PrivateRoute\"\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nexport default function Routes() {\r\n    const [admin, setAdmin] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (!!user) {\r\n                localStorage.setItem('loginUser', JSON.stringify(user));\r\n                if (user?.email === \"admin@gmail.com\") {\r\n                    setAdmin(user)\r\n                }\r\n            }\r\n            else {\r\n                setAdmin({})\r\n            }\r\n        })\r\n        return () => console.log(\"something has removed\")\r\n    }, [])\r\n\r\n    return (\r\n        <Router>\r\n            <NavBar />\r\n            <Switch>\r\n                <PrivateRoutes exact path=\"/\" component={Login} redirectTo={!!Object.keys(admin).length ? \"/adminDashboard\" : \"/dashboard\"} isLogin />\r\n                <PrivateRoutes exact path=\"/Signup\" component={SignUp} redirectTo={!!Object.keys(admin).length ? \"/adminDashboard\" : \"/dashboard\"} isLogin />\r\n                <PrivateRoutes exact path=\"/forget\" component={forgetPassword} redirectTo={!!Object.keys(admin).length ? \"/adminDashboard\" : \"/dashboard\"} isLogin />\r\n\r\n                <PrivateRoutes exact path=\"/allusers\" component={Allusers} redirectTo=\"/\" isUser={!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/allbookings\" component={AllBookings} redirectTo=\"/\" isUser={!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/adminDashboard\" component={AdminDashboard} redirectTo=\"/\" isUser={!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/viewlocations\" component={ViewLocations} redirectTo=\"/\" isUser={!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/addlocations\" component={AddLocations} redirectTo=\"/\" isUser={!Object.keys(admin).length} />\r\n\r\n\r\n                <PrivateRoutes exact path=\"/dashboard\" component={Dashboard} redirectTo=\"/\" isAdmin={!!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/showbookings\" component={ShowBookings} redirectTo=\"/\" isAdmin={!!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/locations/:address/:totalSlots\" component={NewBookings} redirectTo=\"/\" isAdmin={!!Object.keys(admin).length} />\r\n                <PrivateRoutes exact path=\"/locations\" component={Locations} redirectTo=\"/\" isAdmin={!!Object.keys(admin).length} />\r\n\r\n            </Switch>\r\n            <ToastContainer />\r\n        </Router >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Routes from './Routers/Routes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport firebase from \"./Components/firebase/index\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState({\r\n    show: false\r\n  })\r\n\r\n  const check = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (!!user) {\r\n        firebase.database().ref(\"clients/\").child(user?.uid).on(\"value\", (snapshot) => {\r\n          if (snapshot.val()?.block === true) {\r\n            setState({ show: true })\r\n          }\r\n          else {\r\n            setState({ show: false })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    check()\r\n\r\n  }, [])\r\n\r\n\r\n  const onConfirm = () => {\r\n    firebase.auth().signOut().then(() => setState({ show: false }))\r\n    localStorage.removeItem(\"loginUser\")\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {state.show && (\r\n        <SweetAlert\r\n          warning\r\n          confirmBtnText=\"Ok\"\r\n          confirmBtnBsStyle=\"light\"\r\n          onConfirm={() => {\r\n            onConfirm()\r\n          }}\r\n        >\r\n          <b>You are Blocked!</b>\r\n        </SweetAlert>\r\n      )}\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","let remove = \"remove\"\r\nlet add = \"add\"\r\n\r\nconst addUser = (user) => {\r\n    console.log(\"addUser=>\", user)\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: add,\r\n            user: user\r\n        })\r\n    }\r\n}\r\n\r\nconst removeUser = (user) => {\r\n    console.log(\"removeUser=>\", user)\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: remove,\r\n            user: {}\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    addUser,\r\n    removeUser,\r\n    add,\r\n    remove\r\n}","import { add, remove } from \"../action/action\"\r\n\r\nconst InitialState = {\r\n    name: \"Hassan\",\r\n    email: \"hassan@gmail.com\",\r\n    currentUser: {}\r\n}\r\n\r\nexport default function taskReducer(state = InitialState, action) {\r\n    switch (action.type) {\r\n        case add:\r\n            console.log(\"add action:\", action)\r\n            return { ...state, currentUser: action.user }\r\n        case remove:\r\n            console.log(\"remove action:\", action)\r\n            return { ...state, currentUser: action.user }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport TaskReducer from './taskReducer';\r\n\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n};\r\nconst rootReducer = combineReducers({\r\n    task: TaskReducer,\r\n})\r\nexport default persistReducer(persistConfig, rootReducer)","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootreducer from './reducer/CombineReducer'\r\nimport { persistStore } from \"redux-persist\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst enhancer = compose(applyMiddleware(thunk));\r\nconst initialState = {};\r\n\r\nlet store = createStore(rootreducer, initialState, enhancer);\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Reux persist Code:\r\n// const enhancer = compose(applyMiddleware(thunk));\r\n// const initialState = {};\r\n// const persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\n// let store = createStore(persistedReducer, initialState, enhancer);\r\n// let persistor = persistStore(store);\r\n\r\n// export { store, persistor };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { store, persistor } from './store/store'\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}